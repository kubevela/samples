# Code generated by KubeVela templates. DO NOT EDIT.
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    definition.oam.dev/description: "A Probe detect the pod status by establishing a socket connection."
  name: patch-tcp-probe
spec:
  appliesToWorkloads:
    - microservice
  schematic:
    cue:
      template: |-
        patch: {
        	spec: template: spec: {
        		// +patchKey=name
        		containers: [{
        			name: context.name
        			readinessProbe: {
        				initialDelaySeconds: parameter.readinessProbe.waitServiceStartUpSeconds
        				periodSeconds:       parameter.readinessProbe.periodSeconds
        				tcpSocket: {
        					if parameter.readinessProbe.host != _|_ {
        						host: parameter.readinessProbe.host
        					}
        					port: parameter.readinessProbe.port
        				}
        			}
        			livenessProbe: {
        				initialDelaySeconds: parameter.livenessProbe.waitServiceStartUpSeconds
        				periodSeconds:       parameter.livenessProbe.periodSeconds
        				tcpSocket: {
        					if parameter.livenessProbe.host != _|_ {
        						host: parameter.livenessProbe.host
        					}
        					port: parameter.livenessProbe.port
        				}
        			}
        		}]
        	}
        }
        #ProbeAction: {
        	// +usage=Number of seconds after the container has started before liveness probes are initiated
        	waitServiceStartUpSeconds: *20 | int
        
        	// +usage=How often (in seconds) to perform the probe
        	periodSeconds: *10 | int
        	host?:         string
        	port:          int
        }
        
        parameter: {
        	readinessProbe: #ProbeAction
        	livenessProbe:  #ProbeAction
        }
        
